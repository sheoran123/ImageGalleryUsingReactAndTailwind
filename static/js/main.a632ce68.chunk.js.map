{"version":3,"sources":["reportWebVitals.js","components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAA,IAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qDC2BCQ,EAlCG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACVC,EAAMD,EAAMC,KAAKC,MAAM,KAE7B,OACI,sBAAKC,UAAU,iDAAf,UACI,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,yCAAf,sBAAkEH,EAAMO,QACxE,+BACI,+BACA,4CACCP,EAAMQ,SAEP,+BACA,gDACCR,EAAMS,aAEP,+BACA,4CACCT,EAAMU,eAIf,qBAAKP,UAAU,YAAf,SACKF,EAAKU,KAAI,SAACC,GAAD,OACN,uBAAgBT,UAAU,4FAA1B,cACES,IADSA,YCFhBC,EArBK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAClB,EAAqBC,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KAOA,OACI,qBAAKd,UAAU,iDAAf,SACI,sBAAMe,SARC,SAACC,GACZA,EAAEC,iBACFN,EAAWE,IAMmBb,UAAU,kBAApC,SACI,sBAAKA,UAAU,6DAAf,UACI,uBAAOkB,SAAU,SAAAF,GAAC,OAAEF,EAAQE,EAAEG,OAAOC,QAAQC,KAAK,OAAOrB,UAAU,sHAAsHsB,YAAY,4BACrM,wBAAQtB,UAAU,kIAC6BqB,KAAK,SADpD,4B,MCyBLE,MA/Bf,WACE,MAAyBX,mBAAS,IAAlC,mBAAOY,EAAP,KAAcC,EAAd,KACA,EAA+Bb,oBAAS,GAAxC,mBAAOc,EAAP,KAAiBC,EAAjB,KACA,EAAsBf,mBAAS,IAA/B,mBAAOgB,EAAP,KAAYC,EAAZ,KAaA,OAXAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,sBACJtC,MAAK,SAAA2C,GAAG,OAAEA,EAAIC,UACd5C,MAAM,SAAA6C,GACLV,EAAUU,EAAKC,MACfT,GAAa,MAEdU,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,QACxB,CAACV,IAIC,sBAAK5B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaW,WAAY,SAACE,GAAD,OAAQgB,EAAQhB,OACvCa,GAA2B,IAAhBF,EAAOiB,QAAc,oBAAIzC,UAAU,qCAAd,8BAGjC0B,EAAW,oBAAI1B,UAAU,qCAAd,wBAAoE,qBAAKA,UAAU,0BAAf,SAC7EwB,EAAOhB,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM6C,aCzBlCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B5D,K","file":"static/js/main.a632ce68.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ImageCard = ({image}) => {\n    const tags =image.tags.split(',')\n\n    return (\n        <div className=\"max-width-lg rounded overflow-hidden shadow-lg\">\n            <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\n            <div className=\"px-6 py-4\">\n                <div className=\"font-bold text-purple-500 text-xl mb-2\">Photo by {image.user}</div>\n                <ul>\n                    <li>\n                    <strong>Views:</strong>\n                    {image.views}\n                    </li>\n                    <li>\n                    <strong>Downloads:</strong>\n                    {image.downloads}\n                    </li>\n                    <li>\n                    <strong>likes:</strong>\n                    {image.likes}\n                    </li>\n                </ul>\n            </div>\n            <div className=\"px-6 py-4\">\n                {tags.map((tag)=>(\n                    <span key={tag} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semi-bold text-gray-700 mb-2\">\n                    #{tag}\n                </span>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default ImageCard\n","import React,{useState} from 'react'\n\nconst ImageSearch = ({searchText}) => {\n    const [text,setText]=useState('')\n    const onSubmit=(e)=>{\n        e.preventDefault()\n        searchText(text)\n    }\n\n\n    return (\n        <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\n            <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\n                <div className=\"flex items-centre border-b border-b-2 border-teal-500 ty-2\">\n                    <input onChange={e=>setText(e.target.value)} type=\"text\" className=\"appearance-none bg-transparent border-none width-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" placeholder=\"Search Images term ....\"/>\n                    <button className=\"flex-shrink-0 bg-gray-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700\n                    text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">Search</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ImageSearch\n","import React,{useState,useEffect} from 'react';\nimport ImageCard from './components/ImageCard'\nimport ImageSearch from './components/ImageSearch'\n\n\n\nimport './App.css';\n\n\nfunction App() {\n  const [images,setImages]=useState([])\n  const [isLoading,setIsLoading]=useState(true)\n  const [term,setTerm] =useState('')\n\n  useEffect(()=>{\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo`)\n    .then(res=>res.json())\n    .then( data=>{\n      setImages(data.hits)\n      setIsLoading(false)\n    })\n    .catch(err=>console.log(err))\n  },[term])\n\n\n  return (\n      <div className=\"container mx-auto\">\n        <ImageSearch searchText={(text)=>setTerm(text)} />\n        {!isLoading&&images.length===0 && <h1 className=\"text-5xl text-center mx-auto mt-32\">No images found </h1>}\n\n\n        {isLoading? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1> :<div className=\"grid grid-cols-3 grid-4\">\n          {images.map(image=>(\n            <ImageCard key={image.id} image={image}/>\n          ))}\n        </div>}\n      </div>\n    );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './assets/main.css';\nimport App from \"./App\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}